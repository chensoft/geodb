// !!!DO NOT EDIT THIS FILE!!! //

/// Continent
#[derive(Debug, Clone, Copy, Hash, Eq, PartialEq, Ord, PartialOrd, Serialize, Deserialize, EnumIter)]
pub enum Continent {
    AF,
    AN,
    AS,
    EU,
    NA,
    OC,
    SA,
}

impl Continent {
    /// Get continent from code
    pub fn from_code(code: &str) -> Option<Self> {
        match code {
            "AF" => Some(Self::AF),
            "AN" => Some(Self::AN),
            "AS" => Some(Self::AS),
            "EU" => Some(Self::EU),
            "NA" => Some(Self::NA),
            "OC" => Some(Self::OC),
            "SA" => Some(Self::SA),
            _ => None,
        }
    }

    /// Continent code
    pub const fn code(&self) -> &str {
        match self {
            Self::AF => "AF",
            Self::AN => "AN",
            Self::AS => "AS",
            Self::EU => "EU",
            Self::NA => "NA",
            Self::OC => "OC",
            Self::SA => "SA",
        }
    }

    /// Continent name
    pub const fn name(&self) -> &str {
        match self {
            Self::AF => "Africa",
            Self::AN => "Antarctica",
            Self::AS => "Asia",
            Self::EU => "Europe",
            Self::NA => "North America",
            Self::OC => "Oceania",
            Self::SA => "South America",
        }
    }
}